# $Id: pqf.properties,v 1.8 2002-12-12 10:15:56 mike Exp $
#
# Propeties file to drive org.z3950.zing.cql.CQLNode's toPQF()
# back-end.  This specifies the interpretation of various CQL
# qualifiers, relations, etc. in terms of Type-1 query attributes.
#
# See http://www.loc.gov/z3950/agency/zing/cql/dc-indexes.html
# for the Maintenance Agency's work-in-progress mapping of Dublic Core
# qualifiers to Attribute Architecture (util, XD and BIB-2)
# attributes.

# The default access point and result-set references
qualifier.srw.serverChoice		= 1=1016
	# "any"

qualifier.dc.title			= 1=4
qualifier.dc.subject			= 1=21
qualifier.dc.creator			= 1=1003
qualifier.dc.author			= 1=1003
	### Unofficial synonym for "creator"
qualifier.dc.editor			= 1=1020
qualifier.dc.publisher			= 1=1018
qualifier.dc.description		= 1=62
	# "abstract"
qualifier.dc.date			= 1=30
qualifier.dc.resourceType		= 1=1031
	# guesswork: "Material-type"
qualifier.dc.format			= 1=1034
	# guesswork: "Content-type"
qualifier.dc.resourceIdentifier		= 1=12
	# "Local number"
qualifier.dc.source			= 1=1019
	# "Record-source"
qualifier.dc.language			= 1=54
	# "Code--language"
qualifier.dc.relation			= 1=?
	### No idea how to represent this
qualifier.dc.coverage			= 1=?
	### No idea how to represent this
qualifier.dc.rights			= 1=?
	### No idea how to represent this

### These aren't right: I've just put them here for the Generator
qualifier.bath.subject			= 1=21
qualifier.bath.author			= 1=1003
qualifier.foo>bar			= 1=2000

# Relation attributes are selected according to the CQL relation by
# looking up the "relation.<relation>" property:
#
relation.<				= 2=1
relation.le				= 2=2
relation.eq				= 2=3
relation.exact				= 2=3
relation.ge				= 2=4
relation.>				= 2=5
relation.<>				= 2=6

### These two are not really right:
relation.all				= 2=3
relation.any				= 2=3

# BIB-1 doesn't have a server choice relation, so we just make the
# choice here, and use equality (which is clearly correct).
relation.scr				= 2=3

# Relation modifiers.
#
relationModifier.relevant		= 2=102
relationModifier.fuzzy			= 2=100
	### 100 is "phonetic", which is not quite the same thing
relationModifier.stem			= 2=101
relationModifier.phonetic		= 2=100

# Position attributes may be specified for anchored terms (those
# beginning with "^", which is stripped) and unanchored (those not
# beginning with "^").  This may change when we get a BIB-1 truncation
# attribute that says "do what CQL does".
#
position.first				= 3=1
	# "first in field"
position.any				= 3=3
	# "any position in field"
position.last				= 3=4
	# not a standard BIB-1 attribute
position.firstAndLast			= 6=3
	# search term is anchored to be complete field

# Structure attributes may be specified for individual relations; a
# default structure attribute my be specified by the pseudo-relation
# "*", to be used whenever a relation not listed here occurs.
#
structure.exact				= 4=108
	# string
structure.all				= 4=2
structure.any				= 4=2
structure.*				= 4=1
	# phrase

# Finally, any additional attributes that should always be included
# with each term can be specified in the "always" property.
#
always					= 5=105 6=1
# 5=105: the not-yet-standarised CQL-like trunction attribute
# 6=1: completeness = incomplete subfield
